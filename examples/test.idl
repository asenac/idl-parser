typedef long H;

module A 
{
    // Esto es una mierda
};

const long longA = 1;
const string string1 = "esto es una prueba de string";
const long longB = 2 * 3 + 1;

module B
{
    typedef sequence < long > seque;
    typedef sequence< seque > seque2;
    interface C
    {
        typedef/*******/long H;
        struct F{
            long a;
            long b;
            long c;
        };

        void prueba();
    };

    struct D
    {
        C::H /*
                
                */fi;
    };
};

module C
{
    typedef long ssss;
    interface A
    {
        typedef long ssss[100];
        typedef long ssss2[100];

        readonly attribute long at1;
        attribute long at2;
        B::C::H operation(in ssss h1);
        B::C::H operation2(in B::C::H h1, inout long caca );
    };

    struct J {
        //caca x;
    };
};

enum EE
{
};

enum EE1
{
    A
};

enum EE2
{
    A , B 
};


